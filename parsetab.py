
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programDIVIDE ELSE EQUALS FLOAT GT ID IF INT LBRACE LPAREN MINUS NUMBER PLUS RBRACE RPAREN SEMICOLON TIMESprogram : statement\n| statement programstatement : declaracao\n| expressao\n| condicionaldeclaracao : INT ID EQUALS NUMBER SEMICOLONexpressao : ID EQUALS ID PLUS NUMBER SEMICOLON\n| ID EQUALS ID MINUS NUMBER SEMICOLON\n| ID EQUALS ID TIMES NUMBER SEMICOLON\n| ID EQUALS ID DIVIDE NUMBER SEMICOLONcondicional : IF LPAREN ID GT NUMBER RPAREN LBRACE RBRACE'
    
_lr_action_items = {'INT':([0,2,3,4,5,22,28,29,30,31,34,],[6,6,-3,-4,-5,-6,-7,-8,-9,-10,-11,]),'ID':([0,2,3,4,5,6,11,12,22,28,29,30,31,34,],[7,7,-3,-4,-5,10,14,15,-6,-7,-8,-9,-10,-11,]),'IF':([0,2,3,4,5,22,28,29,30,31,34,],[8,8,-3,-4,-5,-6,-7,-8,-9,-10,-11,]),'$end':([1,2,3,4,5,9,22,28,29,30,31,34,],[0,-1,-3,-4,-5,-2,-6,-7,-8,-9,-10,-11,]),'EQUALS':([7,10,],[11,13,]),'LPAREN':([8,],[12,]),'NUMBER':([13,17,18,19,20,21,],[16,23,24,25,26,27,]),'PLUS':([14,],[17,]),'MINUS':([14,],[18,]),'TIMES':([14,],[19,]),'DIVIDE':([14,],[20,]),'GT':([15,],[21,]),'SEMICOLON':([16,23,24,25,26,],[22,28,29,30,31,]),'RPAREN':([27,],[32,]),'LBRACE':([32,],[33,]),'RBRACE':([33,],[34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,9,]),'statement':([0,2,],[2,2,]),'declaracao':([0,2,],[3,3,]),'expressao':([0,2,],[4,4,]),'condicional':([0,2,],[5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','Analisador.py',58),
  ('program -> statement program','program',2,'p_program','Analisador.py',59),
  ('statement -> declaracao','statement',1,'p_statement','Analisador.py',63),
  ('statement -> expressao','statement',1,'p_statement','Analisador.py',64),
  ('statement -> condicional','statement',1,'p_statement','Analisador.py',65),
  ('declaracao -> INT ID EQUALS NUMBER SEMICOLON','declaracao',5,'p_declaracao_variavel','Analisador.py',69),
  ('expressao -> ID EQUALS ID PLUS NUMBER SEMICOLON','expressao',6,'p_expressao','Analisador.py',73),
  ('expressao -> ID EQUALS ID MINUS NUMBER SEMICOLON','expressao',6,'p_expressao','Analisador.py',74),
  ('expressao -> ID EQUALS ID TIMES NUMBER SEMICOLON','expressao',6,'p_expressao','Analisador.py',75),
  ('expressao -> ID EQUALS ID DIVIDE NUMBER SEMICOLON','expressao',6,'p_expressao','Analisador.py',76),
  ('condicional -> IF LPAREN ID GT NUMBER RPAREN LBRACE RBRACE','condicional',8,'p_condicional','Analisador.py',80),
]
